p = 101524035174539890485408575671085261788758965189060164484385690801466167356667036677932998889725476582421738788500738738503134356158197247473850273565349249573867251280253564698939768700489401960767007716413932851838937641880157263936985954881657889497583485535527613578457628399173971810541670838543309159139

a = 85256449776780591202928235662805033201684571648990042997557084658000067050672130152734911919581661523957075992761662315262685030115255938352540032297113615687815976039390537716707854569980516690246592112936796917504034711418465442893323439490171095447109457355598873230115172636184525449905022174536414781771

def quadratic(n,p):
    if n%p == 0:
        return True
    return pow(n,(p-1)//2,p) == 1
def tonelli_shanks(n,p):
    if n%p == 0:
        return 0
    if not quadratic(n,p):
        print("not quadratic residue")
        return None
    else:
        print("n is quadratic residue")
    q = p-1
    s = 0
    while q%2 == 0:
        s += 1
        q //=2
    print("q",q)
    print("s",s)
    z = 2
    while quadratic(z,p):
        z += 1
    print("z=",z)

    M = s
    c = pow(z,q,p)
    t = pow(n,q,p)
    R = pow(n,(q+1)//2,p)

    while t!= 1:
        print("LOOP")
        i = 0
        temp = t
        while temp != 1:
            i += 1
            temp = (temp * temp)%p
        print("i",i)

        pow = 2**(M-i-1)
        b = pow(c,pow,p)
        M = 1
        c = (b*b)%p
        t = (t*b*b)%p
        R = (R*b)%p

    return R

print(tonelli_shanks(a,p))
